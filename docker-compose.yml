services:
  database:
    image: mongo:latest
    restart: unless-stopped
    volumes:
      - ./database/mongo:/data/db
    ports:
      - 27017:27017
#    expose:
#      - 27017
#    networks:
#      - db
#
#  backend:
#    build:
#      context: .
#      dockerfile: Dockerfile-backend
#    image: backend
#    restart: unless-stopped
#    command: uvicorn backend.main:app --reload --workers 1 --host 0.0.0.0 --port 8000
#    expose:
#      - 8000
#    depends_on:
#      - database
#    environment:
#      - PORT=8000
#      - MONGO_HOST=database
#    networks:
#      - db
#      - back
#
#  frontend:
#    build:
#      context: .
#      dockerfile: Dockerfile-frontend
#    image: frontend
#    container_name: frontend
#    restart: unless-stopped
#    command: python -m streamlit run frontend/main.py
#    expose:
#      - 8501
#    depends_on:
#      - backend
#    volumes:
#      - ./img:/img
#    networks:
#      - back
#      - nginx
#
#  nginx-proxy:
#    image: nginx:latest
#    container_name: nginx
#    restart: unless-stopped
#    ports:
#      - "8080:8080"
#    volumes:
#      - ./etc/nginx/nginx.conf:/etc/nginx/conf.d/default.conf
#    depends_on:
#      - frontend
#    networks:
#      - back
#      - nginx
#
#networks:
#  db:
#  back:
#  nginx:
