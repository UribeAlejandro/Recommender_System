services:
  database:
    image: mongo:latest
    restart: unless-stopped
    volumes:
      - ./database/mongo:/data/db
    ports:
      - "27017:27017"

#  standalone-selenium:
#    image: seleniarm/standalone-firefox:latest
#    ports:
#      - "4444:4444"

#  scrapper:
#    build:
#      context: .
#      dockerfile: Dockerfile-scrapper
#    image: scrapper
#    container_name: scrapper
#    restart: unless-stopped
#    command: python -m scrapper.main
#    depends_on:
#      - database
#      - standalone-selenium
#    environment:
#      - MONGO_HOST=database
#      - SELENIUM_HOST=standalone-selenium

#  recommender:
#    build:
#      context: .
#      dockerfile: Dockerfile-recommender
#    image: recommender
#    container_name: recommender
#    restart: unless-stopped
#    command: python -m recommender.main
#    depends_on:
#      - database
#    environment:
#      - MONGO_HOST=database

  web:
    build:
      context: .
      dockerfile: Dockerfile-web
    image: web
    container_name: web
    restart: unless-stopped
    command: python -m streamlit run web/main.py
    ports:
      - "8501:8501"
    depends_on:
      - database
#      - recommender
    environment:
      - MONGO_HOST=database
    volumes:
      - ./img:/img

  nginx-proxy:
    image: nginx:latest
    container_name: nginx
    restart: always
    ports:
      - "8080:8080"
    volumes:
      - ./etc/nginx/nginx.conf:/etc/nginx/conf.d/default.conf
    depends_on:
      - web
